clear f = @(x,y) ((x.*x - y.*y)<1.5).*((x.*x - y.*y)>0.0);g = @(x,y) 1 - double(sqrt(x.*x + y.*y)<1.5);%%xspan = linspace(-3,3,100);yspan = linspace(-3,3,100);[xms,yms] = meshgrid(xspan,yspan);%%surf(xms,yms,f(xms,yms))hold on%%ndata = 500;xdata = 5*(-0.5+rand(ndata,1));ydata = 5*(-0.5+rand(ndata,1));fdata = f(xdata,ydata);gdata = g(xdata,ydata);%%clfsurf(xms,yms,f(xms,yms))hold onplot3(xdata,ydata,fdata,'*')view(0,90)%%Inputs = [xdata ydata];Outputs = [fdata gdata];%%NInput  = 2;NOutput = 2;%NLayers = 2;NNeurons = 3;NHiddenNeurons = 3;%%[F_sym,x_sym,yT_sym,p] = MultiLayer(NInput,NNeurons,NLayers,NOutput);%Loss = casadi.Function('Loss', ...                        { x_sym,yT_sym,p.all }, ...                        { (yT_sym - F_sym(x_sym,p.all))'*(yT_sym - F_sym(x_sym,p.all))      });%%opt_params = momentumGD(Loss,Inputs,Outputs,x_sym,yT_sym,p.all);%%prediction = full((F_sym( Inputs',opt_params)));clfsubplot(2,2,1)surf(xms,yms,f(xms,yms))view(40,40)subplot(2,2,2)plot3(xdata,ydata,prediction(1,:),'*')view(40,40)%subplot(2,2,3)surf(xms,yms,g(xms,yms))view(40,40)subplot(2,2,4)plot3(xdata,ydata,prediction(2,:),'*')view(40,40)%%